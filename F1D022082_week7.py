# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'week7.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtCore import QDate

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Group Box 1- Add new transaction
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(20, 20, 201, 531))
        self.groupBox.setObjectName("groupBox")

        # Description
        self.description = QtWidgets.QLabel(self.groupBox)
        self.description.setGeometry(QtCore.QRect(10, 50, 81, 16))
        self.description.setObjectName("description")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setGeometry(QtCore.QRect(10, 70, 181, 22))
        self.lineEdit.setObjectName("lineEdit")

        # Amount
        self.amount = QtWidgets.QLabel(self.groupBox)
        self.amount.setGeometry(QtCore.QRect(10, 100, 81, 16))
        self.amount.setObjectName("amount")
        self.spinBox = QtWidgets.QSpinBox(self.groupBox)
        self.spinBox.setGeometry(QtCore.QRect(10, 120, 181, 22))
        self.spinBox.setPrefix("Rp ")
        self.spinBox.setMaximum(1000000000) 
        self.spinBox.setObjectName("spinBox")

        # Date
        self.date = QtWidgets.QLabel(self.groupBox)
        self.date.setGeometry(QtCore.QRect(10, 150, 81, 16))
        self.date.setObjectName("date")
        self.dateEdit = QtWidgets.QDateEdit(self.groupBox)
        self.dateEdit.setGeometry(QtCore.QRect(10, 170, 181, 22))
        self.dateEdit.setDisplayFormat("dd/MM/yyyy")
        self.dateEdit.setDate(QDate.currentDate())
        self.dateEdit.setCalendarPopup(True)
        self.dateEdit.setObjectName("dateEdit")

        # Type
        self.type = QtWidgets.QLabel(self.groupBox)
        self.type.setGeometry(QtCore.QRect(10, 200, 81, 16))
        self.type.setObjectName("type")
        self.radioButton = QtWidgets.QRadioButton(self.groupBox)
        self.radioButton.setGeometry(QtCore.QRect(10, 230, 71, 20))
        self.radioButton.setObjectName("radioButton")
        self.radioButton.setChecked(True)
        self.radioButton_2 = QtWidgets.QRadioButton(self.groupBox)
        self.radioButton_2.setGeometry(QtCore.QRect(120, 230, 71, 20))
        self.radioButton_2.setObjectName("radioButton_2")

        # Category
        self.category = QtWidgets.QLabel(self.groupBox)
        self.category.setGeometry(QtCore.QRect(10, 260, 81, 16))
        self.category.setObjectName("category")
        self.comboBox = QtWidgets.QComboBox(self.groupBox)
        self.comboBox.setGeometry(QtCore.QRect(10, 280, 181, 22))
        self.comboBox.setObjectName("comboBox")    

        # Push button fo "add transaction"
        self.pushButton = QtWidgets.QPushButton(self.groupBox)
        self.pushButton.setGeometry(QtCore.QRect(12, 340, 181, 28))
        self.pushButton.setObjectName("pushButton")

        # Identitas
        self.identitas= QtWidgets.QLabel(self.groupBox)
        self.identitas.setGeometry(QtCore.QRect(15, 500, 200, 28))
        self.identitas.setObjectName("identitas")

        # Table 
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(230, 30, 561, 371))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setRowCount(0)
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setHorizontalHeaderLabels(["Date", "Description", "Category", "Amount", "Type"])

        self.tableWidget.setColumnWidth(0, 100)
        self.tableWidget.setColumnWidth(1, 180)
        self.tableWidget.setColumnWidth(2, 180)
        self.tableWidget.setColumnWidth(3, 100)
        self.tableWidget.setColumnWidth(4, 100)

        # Group Box 2- Summary
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(230, 429, 561, 121))
        self.groupBox_2.setObjectName("groupBox_2")

        # Total income
        self.total_income_label = QtWidgets.QLabel(self.groupBox_2)
        self.total_income_label.setGeometry(QtCore.QRect(10, 30, 100, 16))
        self.total_income_label.setObjectName("total_income_label")
        self.incomeValue = QtWidgets.QLabel(self.groupBox_2)
        self.incomeValue.setGeometry(QtCore.QRect(130, 30, 200, 16))
        self.incomeValue.setText("Rp 0")
        self.incomeValue.setObjectName("incomeValue")

        # Total expense
        self.total_expense_label = QtWidgets.QLabel(self.groupBox_2)
        self.total_expense_label.setGeometry(QtCore.QRect(10, 60, 100, 16))
        self.total_expense_label.setObjectName("total_expense_label")
        self.expenseValue = QtWidgets.QLabel(self.groupBox_2)
        self.expenseValue.setGeometry(QtCore.QRect(130, 60, 200, 16))
        self.expenseValue.setText("Rp 0")
        self.expenseValue.setObjectName("expenseValue")

        # Balance
        self.balance_label = QtWidgets.QLabel(self.groupBox_2)
        self.balance_label.setGeometry(QtCore.QRect(10, 90, 100, 16))
        self.balance_label.setObjectName("balance_label")
        self.balanceValue = QtWidgets.QLabel(self.groupBox_2)
        self.balanceValue.setGeometry(QtCore.QRect(130, 90, 200, 16))
        self.balanceValue.setText("Rp 0")
        self.balanceValue.setObjectName("balanceValue")

        # Main window
        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)

        self.total_income = 0
        self.total_expense = 0

        # Category
        self.income_categories = ["Salary (Gaji)", "Bonus", "Freelance", "Gift", "Investment", "Other"]
        self.expense_categories = ["Food", "Transportation", "Nonton/langganan app", "Utilities (Tagihan bulanan)", "Health", "Education", "Shopping", "Other"]
        self.comboBox.addItems(self.income_categories)

        # Button connection
        self.pushButton.clicked.connect(self.add_transaction)
        self.radioButton.toggled.connect(self.update_categories)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Budget Planner"))
        self.groupBox.setTitle(_translate("MainWindow", "Add New Transaction"))
        self.description.setText(_translate("MainWindow", "Description:"))
        self.amount.setText(_translate("MainWindow", "Amount:"))
        self.date.setText(_translate("MainWindow", "Date:"))
        self.type.setText(_translate("MainWindow", "Type:"))
        self.category.setText(_translate("MainWindow", "Category:"))
        self.radioButton.setText(_translate("MainWindow", "Income"))
        self.radioButton_2.setText(_translate("MainWindow", "Expense"))
        self.pushButton.setText(_translate("MainWindow", "Add Transaction"))
        self.identitas.setText(_translate("MainWindow", "Nabila Nur Syfani (F1D022082)"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Summary"))
        self.total_income_label.setText(_translate("MainWindow", "Total Income"))
        self.total_expense_label.setText(_translate("MainWindow", "Total Expense"))
        self.balance_label.setText(_translate("MainWindow", "Balance"))

    def format_rupiah(self, amount):
        locale = QtCore.QLocale("id_ID")
        return locale.toCurrencyString(amount)

    def add_transaction(self):
        description = self.lineEdit.text()
        amount = self.spinBox.value()
        if not description or amount == 0:
            QtWidgets.QMessageBox.warning(None, "Warning", "Please enter a description and amount")
            return 
        
        row = self.tableWidget.rowCount()
        self.tableWidget.insertRow(row)

        category = self.comboBox.currentText()
        date = self.dateEdit.date().toString("dd/MM/yyyy")
        tx_type = "Income" if self.radioButton.isChecked() else "Expense"

        self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(date))
        self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(description))
        self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(category))
        self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(self.format_rupiah(amount)))
        self.tableWidget.setItem(row, 4, QtWidgets.QTableWidgetItem(tx_type))

        if tx_type == "Income":
            self.total_income += amount
        else:
            self.total_expense += amount
        balance = self.total_income - self.total_expense

        self.incomeValue.setText(self.format_rupiah(self.total_income))
        self.expenseValue.setText(self.format_rupiah(self.total_expense))
        self.balanceValue.setText(self.format_rupiah(balance))
        self.balanceValue.setStyleSheet("color: green;" if balance >= 0 else "color: red;")

        # Reset form
        self.lineEdit.clear()
        self.spinBox.setValue(0)
        self.comboBox.setCurrentIndex(0)
        self.dateEdit.setDate(QDate.currentDate())
        self.radioButton_2.setChecked(True)

    def update_categories(self):
        self.comboBox.clear()
        if self.radioButton.isChecked():
            self.comboBox.addItems(self.income_categories)
        else:
            self.comboBox.addItems(self.expense_categories)

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())